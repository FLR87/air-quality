{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_emozhi_logo.svg","assets/facts-slider/slide-1.jpg","assets/facts-slider/slide-2.jpg","assets/facts-slider/slide-3.jpg","assets/facts-slider/slide-4.jpg","assets/facts-slider/slide-5.jpg","assets/sectors/industry.jpg","assets/sectors/transport.jpg","assets/sectors/city_planing.jpg","assets/sectors/energy.jpg","assets/sectors/energetics.jpg","assets/sectors/utilisation.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/Footer/Footer.js","components/AirQuality/AirQuality.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","bgImg","title","links","logosImages","logos","map","logoItem","src","alt","className","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","key","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","slidesPerGroup","centeredSlides","SectorItem","sector","number","useState","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","style","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","i","Footer","partners","partnersLogos","logo","navLinks","mapboxgl","accessToken","AirQuality","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","ref","App","shidLogo","ITNLogo","gcLogo","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f81a0a5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_emozhi_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.f9f2551a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.e3f084b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.ea41cbe3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.fed42456.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.5f157730.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.5ec44869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.65643b05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city_planing.f8f67844.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.fb084e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetics.43f9dac6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/utilisation.a8b6caee.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss'\r\n\r\nconst HeroBlock = ({bgImg,title, links, logos}) => {\r\n    const logosImages = logos.map((logoItem)=><img src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\"/>)\r\n    const navItems = links.map((link)=><a href={link.href} className=\"hero-navigation-item\">{link.title}</a>);\r\n\r\n\r\n    return (\r\n        <section className = \"hero\">\r\n            <div className=\"container\">\r\n                <div className = \"hero-partners\" >\r\n                    {logosImages}\r\n                </div>\r\n            <nav className = \"hero-navigation\"  >\r\n                {navItems}\r\n            </nav>\r\n            <h1 className = \"hero-title\" >{title}</h1>\r\n                <a href = \"#\" className = \"hero-link\" >Отследить</a>\r\n            </div>\r\n    </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"slide image\"/>\r\n            <p className=\"facts-slide-desc\">\r\n                {item.desc}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from \"./SlideFacts\";\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss'\r\n\r\nSwiperCore.use([Navigation, Pagination])\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const factsSlides = slides.map((slideInfo) => <SwiperSlide key={slideInfo.id}>\r\n        <SlideFacts item={slideInfo}/>\r\n    </SwiperSlide>)\r\n\r\n    return(\r\n        <section className=\"facts container\">\r\n                 <h2 className=\"facts-title\">{title}</h2>\r\n                    <div className=\"swiper-button-prev\"/>\r\n            <Swiper\r\n                navigation={{\r\n                nextEl: '.swiper-button-next',\r\n                prevEl: '.swiper-button-prev',\r\n            }}\r\n                pagination={{\r\n                el: '.facts-pagination',\r\n                clickable: true,\r\n                renderBullet: function (index, className) {\r\n                    return `<span class=\"facts-pagination-bullet ${className}\"> </span>`;\r\n                },\r\n            }}\r\n                spaceBetween={40}\r\n                slidesPerView={3}\r\n                slidesPerGroup={3}\r\n                centeredSlides={true}\r\n                >\r\n                {factsSlides};\r\n            </Swiper>\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts-pagination\"/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React, {useState} from 'react';\r\n\r\nconst SectorItem = ({sector,number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false)\r\n    const toggleToolTip = (newValue) => {\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sectors-list-item\"\r\n            onMouseEnter={() => toggleToolTip(true)}\r\n            onMouseLeave={() => toggleToolTip(false)}\r\n            style={{\r\n            background: `url(${sector.imgUrl}) center no-repeat`,\r\n            backgroundSize: 'cover'\r\n        }}>\r\n            <p className=\"sectors-list-item-name\">\r\n                {sector.name}\r\n            </p>\r\n            {\r\n                isToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n                    isDirectionSwitched\r\n                        ? \"sectors-list-item-tooltip-switched\"\r\n                        : \"\"\r\n                }`}>\r\n                    {sector.description}\r\n                </p>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem;","import React from 'react';\r\nimport './SectorsList.scss'\r\nimport SectorItem from \"./SectorItem\";\r\n\r\nconst SectorsList = ({title ,subtitle, items}) => {\r\n    const itemsList = items.map((sector,i) => <SectorItem sector={sector} number={i+1} key={i}/>)\r\n\r\n    return (\r\n        <section className=\"sectors container\">\r\n            <h2 className=\"sectors-title\">{title}</h2>\r\n                <p className=\"sectors-subtitle\">{subtitle}</p>\r\n                <div className=\"sectors-list\">\r\n                {itemsList}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SectorsList;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({partners, links }) => {\r\n    const partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'}  className=\"footer-partners-item\"/>);\r\n    const navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer-nav-link'}>{link.title}</a>)\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-partners\">\r\n                    {partnersLogos}\r\n                </div>\r\n                <div className=\"footer-text-wrap\">\r\n                    <div className=\"footer-nav\">\r\n                        {navLinks}\r\n                    </div>\r\n                    <p className=\"footer-nav-text\">\r\n                        Сайт был разработан <span className=\"text-yellow\">Нетреба Виталием</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">Валерией Бубырь</span>.\r\n                    </p>\r\n                </div>\r\n                <p className=\"footer-text\">\r\n                    2020, Все права защищены\r\n                </p>\r\n                <p className=\"footer-text\">\r\n                    Согласие на обработку персональных данных <br/>\r\n                    Политика конфиденциальности\r\n                </p>\r\n            </div>\r\n\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './AirQuality.scss';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nmapboxgl.accessToken ='pk.eyJ1IjoiZWZlbGFyIiwiYSI6ImNrZmxhc3o4eDFtb2YycnMyMnBjZzJuc2QifQ.mSwwwWzWolB-dJ0SkHvmTw';\r\n\r\nconst AirQuality = () => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo] = useState({\r\n        lng: 31,\r\n        lat: 48.3,\r\n        zoom: 5\r\n    });\r\n\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [locationInfo.lng, locationInfo.lat],\r\n            zoom: locationInfo.zoom\r\n        });\r\n        }, [])\r\n\r\n    return (\r\n        <section className={'air-q container'}>\r\n            <h2 className=\"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n\r\n            <div className=\"air-q-map\" ref={mapContainer}/>\r\n\r\n            <p className=\"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;","import React from 'react';\nimport './App.scss';\nimport HeroBlock from \"./components/HeroBlock/HeroBlock\";\nimport Facts from './components/Facts/Facts';\nimport SectorsList from \"./components/SectorsList/SectorsList\";\nimport gcLogo from './assets/GC_logo.svg';\nimport ITNLogo from './assets/ITN_logo.svg';\nimport shidLogo from './assets/shid_emozhi_logo.svg';\nimport Footer from \"./components/Footer/Footer\";\nimport AirQuality from \"./components/AirQuality/AirQuality\";\n\n\nfunction App() {\n  const partners = [\n      shidLogo,\n      ITNLogo,\n      gcLogo\n  ]\n  const navLinks = [\n    {\n      title:\"Основные факты\",\n      href:\"#facts\",\n    },\n    {\n      title:\"Индекс качества воздуха\",\n      href:\"#quality\",\n    },\n    {\n      title:\"Политика по уменьшению загрязнений\",\n      href:\"#politics\",\n    }\n  ];\n  const factsSlides = [\n    {\n      id:'1332',\n      imgUrl:require(\"./assets/facts-slider/slide-1.jpg\"),\n      desc:\"Женщины и дети – главные жертвы загрязнения воздуха\"\n    },\n    {\n      id:'1333',\n      imgUrl:require(\"./assets/facts-slider/slide-2.jpg\"),\n      desc:\"Защитники окружающей среды подвергаются преследованиям\"\n    },\n    {\n      id:'1334',\n      imgUrl:require(\"./assets/facts-slider/slide-3.jpg\"),\n      desc:\"Загрязнение воздуха – нарушение прав человека\"\n    },\n    {\n      id:'1335',\n      imgUrl:require(\"./assets/facts-slider/slide-4.jpg\"),\n      desc:\"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения \\n\" +\n          \"атмосферного воздуха\"\n    },\n    {\n      id:'1336',\n      imgUrl:require(\"./assets/facts-slider/slide-5.jpg\"),\n      desc:\"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\n    }\n  ];\n  const sectors = [\n    {\n      name: \"Промышленность\",\n      imgUrl: require('./assets/sectors/industry.jpg'),\n      description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\n    },\n    {\n      name: \"Транспорт\",\n      imgUrl: require('./assets/sectors/transport.jpg'),\n      description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\n    },\n    {\n      name: \"Городское планирование\",\n      imgUrl: require('./assets/sectors/city_planing.jpg'),\n      description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\n    },\n    {\n      name: \"Энергия\",\n      imgUrl: require('./assets/sectors/energy.jpg'),\n      description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\n    },\n    {\n      name: \"Энергетика\",\n      imgUrl: require('./assets/sectors/energetics.jpg'),\n      description: \"Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\n    },\n    {\n      name: \"Утилизация отходов\",\n      imgUrl: require('./assets/sectors/utilisation.jpg'),\n      description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\n    },\n  ];\n\n  return (\n    <>\n      <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\n                 logos={partners}\n                 links={navLinks}/>\n      <Facts title=\"Основные факты\" slides={factsSlides}/>\n      <AirQuality/>\n      <SectorsList title=\"Политика по уменьшению загрязнений\"\n                   subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\n                   items={sectors}/>\n      <Footer links={navLinks} partners={partners}/>\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<React.StrictMode>\n                <App/>\n                </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}